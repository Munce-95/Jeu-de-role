const SUPABASE_URL = "https://sxwltroedzxkvqpbcqjc.supabase.co";
const SUPABASE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InN4d2x0cm9lZHp4a3ZxcGJjcWpjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDA0MjQxNzIsImV4cCI6MjA1NjAwMDE3Mn0.F_XIxMSvejY2xLde_LbLcLt564fiW2zF-wqr95rZ2zA";
const API_URL = `${SUPABASE_URL}/rest/v1/personnages`;

// üìå R√©cup√©rer l'ID du personnage depuis l'URL
function getQueryParam(param) {
    const urlParams = new URLSearchParams(window.location.search);
    return urlParams.get(param);
}
const playerID = getQueryParam("id"); // üîπ ID r√©cup√©r√© depuis l'URL

// üìå Charger les infos du personnage
async function chargerFichePersonnage() {
    if (!playerID) {
        alert("Aucun personnage s√©lectionn√© !");
        return;
    }

    try {
        const response = await fetch(`${API_URL}?ID=eq.${playerID}`, {
            headers: { 
                "apikey": SUPABASE_KEY,
                "Content-Type": "application/json"
            }
        });

        const personnages = await response.json();
        console.log("üì¶ Donn√©es re√ßues :", personnages);

        if (personnages.length === 0) {
            alert("Personnage introuvable !");
            return;
        }

        let personnage = personnages[0];

        document.getElementById("nomPersonnage").value = personnage.Nom || "";
        document.getElementById("histoire").value = personnage.Histoire || "";
        document.getElementById("description").value = personnage.Description || "";
        document.getElementById("force").value = personnage.Force || 0;
        document.getElementById("dexterite").value = personnage.Dext√©rit√© || 0;
        document.getElementById("constitution").value = personnage.Constitution || 0;
        document.getElementById("intelligence").value = personnage.Intelligence || 0;
        document.getElementById("sagesse").value = personnage.Sagesse || 0;
        document.getElementById("charisme").value = personnage.Charisme || 0;

    } catch (error) {
        console.error("‚ùå Erreur lors du chargement de la fiche :", error);
    }
}

async function sauvegarderPersonnage() {
    let personnage = {
        "Nom": document.getElementById("nomPersonnage").value.trim(),
        "Histoire": document.getElementById("histoire").value.trim(),
        "Description": document.getElementById("description").value.trim(),
        "Force": Number(document.getElementById("force").value),
        "Dext√©rit√©": Number(document.getElementById("dexterite").value),
        "Constitution": Number(document.getElementById("constitution").value),
        "Intelligence": Number(document.getElementById("intelligence").value),
        "Sagesse": Number(document.getElementById("sagesse").value),
        "Charisme": Number(document.getElementById("charisme").value)
    };

    console.log("üìå Type de playerID :", typeof playerID, playerID);
    console.log("üìå Donn√©es envoy√©es :", personnage);

    try {
        const response = await fetch(`${API_URL}?ID=eq.${playerID}`, {
            method: "PATCH",  
            headers: { 
                "apikey": SUPABASE_KEY,
                "Content-Type": "application/json"
            },
            body: JSON.stringify(personnage)
        });

        console.log("üìå R√©ponse brute de Supabase :", response);
        console.log("üìå Code HTTP :", response.status);

        // ‚úÖ Si la r√©ponse est vide (204 No Content), on √©vite `response.json()`
        if (response.status === 204 || response.status === 200) { 
            console.log("‚úÖ Mise √† jour r√©ussie, aucune donn√©e retourn√©e !");
            alert("Personnage mis √† jour avec succ√®s !");
            return;
        }

        // üîπ V√©rifie si la r√©ponse contient du JSON valide
        const textResponse = await response.text();
        if (!textResponse) {
            console.log("‚úÖ Mise √† jour r√©ussie, mais Supabase n‚Äôa rien renvoy√©.");
            alert("Personnage mis √† jour avec succ√®s !");
            return;
        }

        // üîπ Convertir en JSON seulement si du contenu est pr√©sent
        const result = JSON.parse(textResponse);
        console.log("‚úÖ Personnage mis √† jour :", result);
        alert("Personnage mis √† jour avec succ√®s !");

        // üìå Recharger la fiche apr√®s la sauvegarde
        chargerFichePersonnage();

    } catch (error) {
        console.error("‚ùå Erreur lors de la sauvegarde :", error);
    }
}


// üìå Charger la fiche au d√©marrage
document.addEventListener("DOMContentLoaded", chargerFichePersonnage);
